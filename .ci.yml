.job_template:
  image: "d2s://external/docker/debian:bookworm"
  tags: ["ace-x86_64"]
  variables:
    SCALENODE_CPU: 2
    SCALENODE_DISK: 10
    SCALENODE_RAM: 2048
    DEBIAN_FRONTEND: noninteractive

stages:
  - build

Build PCIe Communication Server:
  stage: build
  extends: .job_template

  before_script:
    - apt update -qq
    - apt upgrade -y -qq
    - apt install -y -qq cmake python3-dev python3-pip python3-venv git lcov

  script:
    - python3 -m venv venv
    - source venv/bin/activate
    - pip3 install -e git+https://github.com/antmicro/tuttest#egg=tuttest
    - tuttest README.md server-build | bash -
    
    - ./build/server-tests
    - ./scripts/coverage.sh
    - tar czf coverage.tar.gz coverage

  artifacts:
    paths:
      - build/server
      - build/server-tests
      - coverage.tar.gz
    when: always

Build Zephyr Samples:
  stage: build
  extends: .job_template
  image: "d2s://external/docker/zephyrprojectrtos/ci:v0.26.5"
  variables:
    CMAKE_PREFIX_PATH: /opt/toolchains

  script:
    - pip3 install -e git+https://github.com/antmicro/tuttest#egg=tuttest
    - tuttest zephyr-samples/pcie_scan/README.md pcie-scan-prep | bash -

    # PCIe Scan sample
    - tuttest zephyr-samples/pcie_scan/README.md pcie-scan-build | bash -
    - tar czf pcie_scan.tar.gz build.pcie_scan

    # PCIe NVMe sample
    - tuttest zephyr-samples/pcie_nvme/README.md pcie-nvme-build | bash -
    - tar czf pcie_nvme.tar.gz build.pcie_nvme

  artifacts:
    paths:
      - pcie_scan.tar.gz
      - pcie_nvme.tar.gz
    when: always

Checkpatch:
  stage: build
  extends: .job_template

  before_script:
    - apt update -qq
    - apt upgrade -y -qq
    - apt install -y -qq wget perl

  script:
    # Download checkpatch.pl script directly from the Linux kernel source tree
    - wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/scripts/checkpatch.pl
    - chmod +x checkpatch.pl

    # Use xargs instead of find's -exec due to the status return code limitation in find
    - find . -iname '*.[ch]' -not -path "./build/*" -and -not -path "./tests/*" | xargs ./checkpatch.pl -f --no-tree
