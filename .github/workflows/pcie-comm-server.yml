name: pcie-comm-server
run-name: PCIe Communication Server
on: [push, pull_request]
jobs:
  Build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - run: |
          sudo apt-get update -qq
          sudo apt-get upgrade -y -qq
          sudo apt-get install -y -qq cmake git lcov libgtest-dev
      - run: pip3 install -e git+https://github.com/antmicro/tuttest#egg=tuttest
      - run: |
          tuttest README.md warp-pipe-build | bash -oe pipefail -
          tuttest README.md warp-pipe-install | sudo bash -oe pipefail -
      - run: |
          tuttest README.md warp-pipe-tests | bash -oe pipefail -
          tuttest README.md warp-pipe-coverage | bash -oe pipefail -
          tar czf coverage.tar.gz coverage
      - uses: actions/upload-artifact@v3
        with:
          path: |
              ./build/warppipe-tests
              ./coverage.tar.gz

  Checkpatch:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: |
          sudo apt-get update -qq
          sudo apt-get upgrade -y -qq
          sudo apt-get install -y -qq wget perl
      - run: |
          wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/scripts/checkpatch.pl
          chmod +x checkpatch.pl
      - run: find . -iname '*.[ch]' -not -path "./build/*" -and -not -path "./tests/*" -and -not -path "./zephyr-samples/drivers/dma/*" | xargs ./checkpatch.pl -f --no-tree

  Zephyr-Samples:
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/zephyrproject-rtos/ci:v0.26.2
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
      PKG_CONFIG_PATH: /usr/lib/x86_64-linux-gnu/pkgconfig
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 1
      - run: |
          apt update -qq
          apt upgrade -y -qq
          apt install -y -qq libgtest-dev pkg-config
      - run: |
          pip3 install -e git+https://github.com/antmicro/tuttest#egg=tuttest
          tuttest README.md warp-pipe-build,warp-pipe-install,memory-mock-build | bash -oe pipefail -
          tuttest README.md zephyr-env-prep | bash -oe pipefail -
      - run: |
          tuttest zephyr-samples/pcie_scan/README.md pcie-scan-build | bash -oe pipefail -
          tar czf pcie_scan.tar.gz build.pcie_scan
      - run: |
          tuttest zephyr-samples/pcie_nvme/README.md pcie-nvme-build | bash -oe pipefail -
          tar czf pcie_nvme.tar.gz build.pcie_nvme
      - run: |
          tuttest zephyr-samples/pcie_ivshmem/README.md pcie-ivshmem-build | bash -oe pipefail -
          tar czf pcie_ivshmem.tar.gz build.pcie_ivshmem
      - run: |
          tuttest zephyr-samples/pcie_dma/README.md pcie-dma-build,pcie-dma-run,pcie-dma-teardown | bash -oe pipefail -
          tar czf pcie_dma.tar.gz build.pcie_dma
      - run: |
          tuttest zephyr-samples/pcie_native/README.md pcie-native-build,pcie-native-run,pcie-native-teardown | bash -oe pipefail -
          tar czf pcie_native.tar.gz build.pcie_native
      - run: |
          tuttest zephyr-samples/pcie_pipe/README.md pcie-qemu-build,pcie-pipe-build,pcie-pipe-run,pcie-pipe-teardown | bash -oe pipefail -
          tar czf pcie_pipe.tar.gz build.pcie_pipe_*

      - uses: actions/upload-artifact@v3
        with:
          path: |
              ./pcie_*.tar.gz

  Twister-tests:
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/zephyrproject-rtos/ci:v0.26.2
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
      PKG_CONFIG_PATH: /usr/lib/x86_64-linux-gnu/pkgconfig
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 1
      - run: |
          apt update -qq
          apt upgrade -y -qq
          apt install -y -qq libgtest-dev pkg-config
      - run: |
          pip3 install -e git+https://github.com/antmicro/tuttest#egg=tuttest
          tuttest README.md warp-pipe-build,warp-pipe-install,memory-mock-build | bash -oe pipefail -
          tuttest README.md zephyr-env-prep | bash -oe pipefail -
      - run: tuttest README.md run-twister-tests | bash -oex pipefail -
      - uses: actions/upload-artifact@v3
        with:
          path: |
              twister-out

  Docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup documentation environment
        run: |
          pip install -r docs/requirements.txt

      - name: Build the documentation
        run: |
          cd docs
          SPHINXOPTS="-A conf_py_path=$DOCS_DIR/$SOURCEDIR -A commit=$CI_BUILD_REF -A branch=$CI_BUILD_REF_NAME" make html
          make linkcheck

      - name: "Upload artifact: Sphinx HTML"
        uses: actions/upload-artifact@v3
        with:
          name: Documentation-HTML
          path: docs/build/html

      - name: Publish site to GitHub Pages
        if: github.event_name != 'pull_request'
        run: |
          cd docs/build/html
          touch .nojekyll
          git init
          cp ../../../.git/config .git/
          git add .
          git config --local user.email "BuildTheDocs@GitHubActions"
          git config --local user.name "GitHub Actions"
          git commit -a -m "update ${{ github.sha }}"
          git push -u origin +HEAD:gh-pages
